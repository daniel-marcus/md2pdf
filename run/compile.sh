#!/bin/bash

set -e

# MDTEX_DIR: if not provided, fallback to $(pwd)
: "${MDTEX_DIR:=$(pwd)}"

# Check if a filename was provided
if [ -z "$1" ]; then
  echo "Usage: $0 FILENAME.md"
  exit 1
fi

MD_FILE=$(realpath "$1")
FILENAME=$(basename "$MD_FILE" .md)
TEX_OUT="./$FILENAME.tex"
CWD=$(dirname "$MD_FILE")

cd "$CWD"

# Extract the 'template' value from the YAML header or use DEFAULT_TEMPLATE
DEFAULT_TEMPLATE="letter"
TEMPLATE=$(awk '
  BEGIN { in_yaml = 0 }
  /^---/ { in_yaml = !in_yaml; next }
  in_yaml && /^template:/ {
    sub(/^template:[[:space:]]*/, "", $0)
    print $0
    exit
  }
' "$MD_FILE")
TEMPLATE=${TEMPLATE:-$DEFAULT_TEMPLATE}

TEMPLATE_FILE="$MDTEX_DIR/templates/$TEMPLATE.tex"
FILTER_FILE="$MDTEX_DIR/templates/$TEMPLATE.lua"

if [ ! -e "$TEMPLATE_FILE" ]; then
  echo "❌ Error: Template $TEMPLATE_FILE not found"
  exit 1
fi

if [ -e "$FILTER_FILE" ]; then
    TEMPLATE_FILTER_ARG="--lua-filter=$FILTER_FILE"
else
    TEMPLATE_FILTER_ARG=""
fi

EXAMPLE_CONFIG_FILE="$MDTEX_DIR/config.example.yaml"
USER_CONFIG_FILE="$MDTEX_DIR/config.yaml"

if [[ ! -f $USER_CONFIG_FILE ]]; then
  echo "config.yaml not found. Creating from config.example.yaml ..."
  cp $EXAMPLE_CONFIG_FILE $USER_CONFIG_FILE
fi

if [[ "$CWD" == "$MDTEX_DIR/examples" ]]; then
    CONFIG_FILE="$EXAMPLE_CONFIG_FILE"
else
    CONFIG_FILE="$USER_CONFIG_FILE"
fi


if ! pandoc "$MD_FILE" \
  --standalone \
  --include-in-header="$MDTEX_DIR/templates/_shared.tex" \
  --metadata-file="$CONFIG_FILE" \
  --template="$TEMPLATE_FILE" \
  --lua-filter="$MDTEX_DIR/templates/_shared.lua" \
  $TEMPLATE_FILTER_ARG \
  -s -o "$TEX_OUT"; then
  echo "❌ Error: pandoc failed"
  exit 1
fi

LOGFILE=$(mktemp)  

if ! xelatex -interaction=nonstopmode -halt-on-error "$TEX_OUT" >"$LOGFILE" 2>&1; then
  tail -n 20 "$LOGFILE"
  echo "❌ Error: xelatex failed"
  rm "$LOGFILE"
  exit 1
else 
  # Clean up auxiliary files generated by LaTeX
  latexmk -xelatex -pdf -c "$TEX_OUT" > /dev/null 2>&1
  echo "✅ Built $FILENAME.pdf and $FILENAME.tex"
  rm "$LOGFILE"
fi